@use 'sass:map';
@import 'node_modules/sass-true/sass/true';
@import '../../sass/_baseline';

@include describe('all the individual sections') {
    @include it('document') {
        @include assert{
            @include output {
                @include typographyBaseline(document)
            }

            @include expect {
                html {
                color: rgb(55, 55, 55);
                font-family: Georgia, "Times New Roman", serif;
                font-size: calc(.5vw + 1rem);
                line-height: 1.618;
                }

                /*=====
                #Everything
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                p,
                ul,
                ol,
                dl,
                pre {
                line-height: 1.618;
                margin: 0 0.618rem;
                }
            }
        }
    }
    @include it('headings') {
        @include assert{
            @include output {
                @include typographyBaseline(headings)
            }

            @include expect {
                /*=====
                #Headings
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6 {
                font-family: Helvetica, Arial, sans-serif;
                font-weight: 700;
                line-height: 1.2;
                margin-bottom: calc(1.618vmin - 1vmax + .35em);
                }

                h1 {
                font-size: 2.617924em;
                }

                h2 {
                font-size: 1.618em;
                }

                h3 {
                font-size: 1.5em;
                }

                h4 {
                font-size: 1.3rem;
                }

                h5 {
                font-size: 1.2rem;
                }

                h6 {
                font-size: 1.1rem;
                }
            }
        }
    }
    @include it('blocks') {
        @include assert{
            @include output {
                @include typographyBaseline(blocks)
            }

            @include expect {
                /*=====
                #Paragraphs #Blocks
                =====*/
                hr {
                color: rgb(165, 165, 165);
                border-width: 0.0625em;
                border-style: solid;
                margin: 1.618em 0.618rem;
                }

                p,
                blockquote {
                line-height: 1.618;
                }

                p {
                font-size: 1rem;
                margin-bottom: 0.618em;
                }

                blockquote,
                q {
                    quotes: "“""”""‘""’";
                }

                blockquote::before,
                q::before {
                    content: open-quote;
                }
                /* Credit where it's due:
                    https://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/
                */
                blockquote {
                background: rgba(165, 165, 165, 0.15);
                border-left: 10px solid rgb(220, 220, 220);
                margin: 1.618em 0.618rem;
                padding: 0.618em 0.618rem;
                }

                blockquote::before,
                blockquote::after {
                color: rgb(193, 193, 193);
                font-size: 4em;
                line-height: 0.1em;
                vertical-align: -0.5em;
                }

                blockquote::before {
                margin-right: 0.618rem;
                }

                blockquote::after {
                content: no-close-quote;
                }

                q::after {
                content: close-quote;
                }

            }
        }
    }
    @include it('lists') {
        @include assert{
            @include output {
                @include typographyBaseline(lists)
            }

            @include expect {
                /*=====
                #Lists
                =====*/
                ul,
                ol,
                dl,
                menu {
                padding: 0.618em 0.618rem;
                }

                li {
                text-indent: -.9em;
                /*this brings the left text aligned with the text of a <dd> element*/
                line-height: 1.618;
                padding: 0;
                margin: 0 0 0 0.618rem;
                }

                li {
                list-style-position: inside;
                }

                nav li,
                menu li {
                text-indent: 0;
                list-style-type: none;
                margin: 0;
                }

                dt {
                text-indent: -0.618rem;
                }

                dd {
                margin: 0;
                padding: 0 0.618rem;
                }
            }
        }
    }
    @include it('contentFlow') {
        @include assert{
            @include output {
                @include typographyBaseline(contentFlow)
            }

            @include expect {
                /*=====
                #Content-Flow
                =====*/
                em,
                i,
                cite {
                font-style: italic;
                }

                strong,
                b {
                font-weight: 700;
                }

                cite {
                display: block;
                text-align: right;
                }
                
                u {
                text-decoration: dotted underline 2px;
                text-decoration-color: rgb(255, 0, 0);
                }

                small,
                sub,
                sup {
                font-size: 0.618rem;
                line-height: 1;
                }

                sub {
                vertical-align: sub;
                }

                sup {
                vertical-align: super;
                }

                /*=====
                #Content-Flow #editorial
                =====*/
                s,
                strike,
                del,
                ins {
                color: rgb(110, 110, 110);
                }

                s,
                strike,
                del {
                text-decoration: line-through;
                }

                ins,
                del {
                background-color: rgba(220, 220, 220, 0.25);
                }

                ins {
                text-decoration: none;
                }

                u {
                text-decoration: dotted underline 2px;
                text-decoration-color: rgb(255, 0, 0);
                }
                /*
                mark and selection should be different, so user knows which one they've selected.

                mark and selections:
                saturation: 44%
                lightness: 75%
                Hue is different
                */
                mark {
                background-color: rgba(165, 220, 165, 0.9);
                }

                ::selection {
                background-color: rgba(126, 205, 166, 0.9);
                }

                /* Because mark and selection have same saturation, brightenss, mark won't easily stand out if it's selected */
                mark::selection {
                background-color: rgba(165, 220, 110, 0.9);
                }

                /* dfn and dt both do the same thing: denote a term to be defined */
                dfn,
                dt {
                font-style: oblique 15deg;
                font-weight: 700;
                text-transform: capitalize;
                }

                abbr {
                text-transform: uppercase;
                text-decoration: none;
                }

                /* an abbreviation with a title should invite a user to hover over it*/
                abbr[title] {
                text-decoration: dotted underline 2px;
                }
            }
        }
    }
    @include it('code') {
        @include assert{
            @include output {
                @include typographyBaseline(code)
            }

            @include expect {
                /*=====
                #Content-flow #Code
                =====*/
                pre,
                code,
                var,
                samp,
                data {
                font-family: monospace;
                }

                kbd,
                samp,
                data {
                background-color: rgba(165, 165, 165, 0.2);
                }

                kbd {
                font-size: 0.75rem;
                padding: 0.25ex 0.5ex;
                border: 1px solid rgb(193,193,193);
                border-radius: 3px;
                }

                /*Treat samp like a mini blockquote. because basically you're quoting what the computer would do*/
                samp,
                data {
                padding: 0 10px;
                }

                var,
                data {
                font-style: italic;
                }

                samp {
                border-left: 5px solid rgb(193, 193, 193);
                }

                pre {
                font-size: 0.75rem;
                line-height: 1.2;
                padding: 0.618em 0.618rem;
                border: 1px solid rgb(193, 193, 193);
                border-radius: 2px;
                overflow: scroll;
                }
            }
        }
    }
    @include it('ruby') {
        @include assert{
            @include output {
                @include typographyBaseline(ruby)
            }

            @include expect {
                /*=====
                #Ruby
                =====*/
                ruby {
                display: ruby;
                position: relative;
                margin: 0 0.5ex;
                -webkit-ruby-position: before;
                ruby-position: over;
                ruby-position: before;
                }

                rtc, rbc {
                font-size: inherit;
                line-height: 1;
                ruby-align: start;
                }

                rt {
                display: ruby-text;
                font-size: 0.7em;
                }

                rt + rt {
                margin-left: 0.5ex;
                }

                rtc > bdo {
                display: -webkit-ruby-text-container;
                display: ruby-base-container;
                }

                /*complex ruby for chrome and Edge*/
                /*only FF has "complete" ruby support*/
                @supports (ruby-align: left) or (not (display: ruby-base-container)) {
                ruby {
                    display: inline-flex;
                    flex-direction: column;
                    vertical-align: 1em;
                    line-height: 1;
                }

                rtc, rt {
                    order: -1;
                    flex-grow: 1;
                    flex-shrink: 0;
                }

                rtc {
                    display: inline-flex;
                }
                }
                /*Edge fixes*/
                @supports (ruby-align: left) {
                rtc {
                    justify-content: space-between;
                }

                rt {
                    display: inline-flex;
                }
                }
            }
        }
    }
    @include it('links') {
        @include assert{
            @include output {
                @include typographyBaseline(links)
            }

            @include expect {
                /*=====
                #Links
                =====*/
                a {
                color: rgb(110, 165, 220);
                text-decoration: none;
                border-bottom: 1px dotted transparent;
                transition: all 0.3s ease-in-out;
                }

                a:hover,
                a:focus {
                color: rgb(110, 165, 193);
                border-color: rgb(110, 165, 193);
                outline: none;
                }

                a:active {
                border-style: solid;
                }

            }
        }
    }
    @include it('table') {
        @include assert{
            @include output {
                @include typographyBaseline(table)
            }

            @include expect {
                /*==========
                #Table
                ==========*/
                table {
                font-size: 0.8rem;
                }

                caption {
                font-size: 1rem;
                text-transform: capitalize;
                font-style: italic;
                }

                th, td {
                text-align: left;
                vertical-align: middle;
                line-height: 1.2;
                padding: 0.4em 0.618rem;
                }

                th {
                font-family: Helvetica, Arial, sans-serif;
                font-weight: 700;
                font-size: 1.3rem;
                /*treat th in a body as h4*/
                }

                thead th,
                tfoot th {
                font-size: 1.5em;
                /*treat th in header/footer as h3*/
                }
            }
        }
    }
}

@include describe('excluding sections') {
    @include it('can exclude one item') {
        @include assert {
            @include output {
                @include typographyBaseline($exclude: table)
            }

            @include expect {
                :root {
                --colorNeutralDarker: rgb(55, 55, 55);
                --colorNeutralDark: rgb(110, 110, 110);
                --colorNeutral: rgb(165, 165, 165);
                --colorNeutralLight: rgb(193, 193, 193);
                --colorNeutralLighter: rgb(220, 220, 220);
                --colorCool: rgb(110, 165, 220);
                --colorCoolDarker: rgb(110, 165, 193);
                --baseTextColor: rgb(55, 55, 55);
                --baseEditorialTextColor: rgb(110, 110, 110);
                --baseLinkColor: rgb(110, 165, 220);
                --baseLinkColorHover: rgb(110, 165, 193);
                --baseInlineBorderColor: rgb(193, 193, 193);
                --baseTextLineColor: rgb(55, 55, 55);
                --alertTextLineColor: rgb(255, 0, 0);
                --baseQuoteBackgroundColor: 165, 165, 165;
                --baseLineHeight: 1.618;
                --smallLineHeight: 1.2;
                --baseTextSize: 1rem;
                --biggestTextSize: 1.3rem;
                --biggerTextSize: 1.2rem;
                --bigTextSize: 1.1rem;
                --smallTextSize: 0.8rem;
                --smallerTextSize: 0.75rem;
                --smallestTextSize: 0.618rem;
                --baseTitleSize: 1.5em;
                --biggestTitleSize: 2.617924em;
                --bigTitleSize: 1.618em;
                --smallTitleSize: 1.3rem;
                --smallerTitleSize: 1.2rem;
                --smallestTitleSize: 1.1rem;
                --baseFontFamily: Georgia, Times New Roman, serif;
                --titleFontFamily: Helvetica, Arial, sans-serif;
                --codeFontFamily: monospace;
                --lightestFontWeight: 100;
                --baseFontWeight: 400;
                --heaviestFontWeight: 700;
                --shiftedFontVoice: oblique 15deg;
                --baseFontVoice: normal;
                --alternateFontVoice: italic;
                --baseTextQuotes: “ ” ‘ ’;
                --baseQuoteBorder: 10px solid rgb(220, 220, 220);
                --smallQuoteBorder: 5px solid rgb(193, 193, 193);
                --bigSpacingHorizontal: 1.618rem;
                --baseSpacingHorizontal: 0.618rem;
                --bigSpacingVertical: 1.618em;
                --baseSpacingVertical: 0.618em;
                --idleTextLineStyle: dotted;
                --activeTextLineStyle: solid;
                --idleTextDecoration: dotted underline 2px;
                }

                html {
                color: var(--baseTextColor);
                font-family: var(--baseFontFamily);
                font-size: calc(.5vw + 1rem);
                line-height: var(--baseLineHeight);
                }

                /*=====
                #Everything
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                p,
                ul,
                ol,
                dl,
                pre {
                line-height: var(--baseLineHeight);
                margin: 0 var(--baseSpacingHorizontal);
                }

                /*=====
                #Headings
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6 {
                font-family: var(--titleFontFamily);
                font-weight: var(--heaviestFontWeight);
                line-height: var(--smallLineHeight);
                margin-bottom: calc(1.618vmin - 1vmax + .35em);
                }

                h1 {
                font-size: var(--biggestTitleSize);
                }

                h2 {
                font-size: var(--bigTitleSize);
                }

                h3 {
                font-size: var(--baseTitleSize);
                }

                h4 {
                font-size: var(--smallTitleSize);
                }

                h5 {
                font-size: var(--smallerTitleSize);
                }

                h6 {
                font-size: var(--smallestTitleSize);
                }

                /*=====
                #Lists
                =====*/
                ul,
                ol,
                dl,
                menu {
                padding: var(--baseSpacingVertical) var(--baseSpacingHorizontal);
                }

                li {
                text-indent: -0.9em;
                /*this brings the left text aligned with the text of a <dd> element*/
                line-height: var(--baseLineHeight);
                padding: 0;
                margin: 0 0 0 var(--baseSpacingHorizontal);
                }

                li {
                list-style-position: inside;
                }

                nav li,
                menu li {
                text-indent: 0;
                list-style-type: none;
                margin: 0;
                }

                dt {
                text-indent: calc(-1 * var(--baseSpacingHorizontal));
                }

                dd {
                margin: 0;
                padding: 0 var(--baseSpacingHorizontal);
                }

                /*=====
                #Paragraphs #Blocks
                =====*/
                hr {
                color: var(--colorNeutral);
                border-width: 0.0625em;
                border-style: solid;
                margin: var(--bigSpacingVertical) var(--baseSpacingHorizontal);
                }

                p,
                blockquote {
                line-height: var(--baseLineHeight);
                }

                p {
                font-size: var(--baseTextSize);
                margin-bottom: var(--baseSpacingVertical);
                }

                blockquote,
                q {
                    quotes: var(--baseTextQuotes);
                }

                blockquote::before,
                q::before {
                    content: open-quote;
                }

                /* Credit where it's due:
                    https://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/
                */
                blockquote {
                background: rgba(165, 165, 165, 0.15);
                border-left: var(--baseQuoteBorder);
                margin: var(--bigSpacingVertical) var(--baseSpacingHorizontal);
                padding: var(--baseSpacingVertical) var(--baseSpacingHorizontal);
                }

                blockquote::before,
                blockquote::after {
                color: var(--colorNeutralLight);
                font-size: 4em;
                line-height: 0.1em;
                vertical-align: -0.5em;
                }

                blockquote::before {
                margin-right: var(--baseSpacingHorizontal);
                }

                blockquote::after {
                content: no-close-quote;
                }

                q::after {
                content: close-quote;
                }

                /*=====
                #Content-Flow
                =====*/
                em,
                i,
                cite {
                font-style: var(--alternateFontVoice);
                }

                strong,
                b {
                font-weight: var(--heaviestFontWeight);
                }

                cite {
                display: block;
                text-align: right;
                }

                u {
                text-decoration: var(--idleTextDecoration);
                text-decoration-color: var(--alertTextLineColor);
                }

                small,
                sub,
                sup {
                font-size: var(--smallestTextSize);
                line-height: 1;
                }

                sub {
                vertical-align: sub;
                }

                sup {
                vertical-align: super;
                }

                /*=====
                #Content-Flow #editorial
                =====*/
                s,
                strike,
                del,
                ins {
                color: var(--baseEditorialTextColor);
                }

                s,
                strike,
                del {
                text-decoration: line-through;
                }

                ins,
                del {
                background-color: rgba(220, 220, 220, 0.25);
                }

                ins {
                text-decoration: none;
                }

                u {
                text-decoration: var(--idleTextDecoration);
                text-decoration-color: var(--alertTextLineColor);
                }
                /*
                mark and selection should be different, so user knows which one they've selected.

                mark and selections:
                saturation: 44%
                lightness: 75%
                Hue is different
                */
                mark {
                background-color: rgba(165, 220, 165, 0.9);
                }

                ::selection {
                background-color: rgba(126, 205, 166, 0.9);
                }

                /* Because mark and selection have same saturation, brightenss, mark won't easily stand out if it's selected */
                mark::selection {
                background-color: rgba(165, 220, 110, 0.9);
                }

                /* dfn and dt both do the same thing: denote a term to be defined */
                dfn,
                dt {
                font-style: var(--shiftedFontVoice);
                font-weight: var(--heaviestFontWeight);
                text-transform: capitalize;
                }

                abbr {
                    text-transform: uppercase;
                    text-decoration: none;
                }

                /* an abbreviation with a title should invite a user to hover over it*/
                abbr[title] {
                    text-decoration: var(--idleTextDecoration);
                }

                /*=====
                #Content-flow #Code
                =====*/
                pre,
                code,
                var,
                samp,
                data {
                font-family: var(--codeFontFamily);
                }

                kbd,
                samp,
                data {
                background-color: rgba(165, 165, 165, 0.2);
                }

                kbd {
                font-size: var(--smallerTextSize);
                padding: 0.25ex 0.5ex;
                border: 1px solid var(--baseInlineBorderColor);
                border-radius: 3px;
                }

                /*Treat samp like a mini blockquote. because basically you're quoting what the computer would do*/
                samp,
                data {
                padding: 0 10px;
                }

                var,
                data {
                font-style: var(--alternateFontVoice);
                }

                samp {
                border-left: var(--smallQuoteBorder);
                }

                pre {
                font-size: var(--smallerTextSize);
                line-height: var(--smallLineHeight);
                padding: var(--baseSpacingVertical) var(--baseSpacingHorizontal);
                border: 1px solid var(--baseInlineBorderColor);
                border-radius: 2px;
                overflow: scroll;
                }

                /*=====
                #Ruby
                =====*/
                ruby {
                display: ruby;
                position: relative;
                margin: 0 0.5ex;
                -webkit-ruby-position: before;
                ruby-position: over;
                ruby-position: before;
                }

                rtc, rbc {
                font-size: inherit;
                line-height: 1;
                ruby-align: start;
                }

                rt {
                display: ruby-text;
                font-size: 0.7em;
                }

                rt + rt {
                margin-left: 0.5ex;
                }

                rtc > bdo {
                display: -webkit-ruby-text-container;
                display: ruby-base-container;
                }

                /*complex ruby for chrome and Edge*/
                /*only FF has "complete" ruby support*/
                @supports (ruby-align: left) or (not (display: ruby-base-container)) {
                ruby {
                    display: inline-flex;
                    flex-direction: column;
                    vertical-align: 1em;
                    line-height: 1;
                }

                rtc, rt {
                    order: -1;
                    flex-grow: 1;
                    flex-shrink: 0;
                }

                rtc {
                    display: inline-flex;
                }
                }
                /*Edge fixes*/
                @supports (ruby-align: left) {
                rtc {
                    justify-content: space-between;
                }

                rt {
                    display: inline-flex;
                }
                }
                /*=====
                #Links
                =====*/
                a {
                color: var(--baseLinkColor);
                text-decoration: none;
                border-bottom: 1px var(--idleTextLineStyle) transparent;
                transition: all 0.3s ease-in-out;
                }

                a:hover,
                a:focus {
                color: var(--baseLinkColorHover);
                border-color: var(--baseLinkColorHover);
                outline: none;
                }

                a:active {
                border-style: solid;
                }

            }
        }
    }
    @include it('can exclude many items') {
        @include assert {
            @include output {
                @include typographyBaseline($exclude: (table, ruby, code, contentFlow))
            }

            @include expect {
                :root {
                --colorNeutralDarker: rgb(55, 55, 55);
                --colorNeutralDark: rgb(110, 110, 110);
                --colorNeutral: rgb(165, 165, 165);
                --colorNeutralLight: rgb(193, 193, 193);
                --colorNeutralLighter: rgb(220, 220, 220);
                --colorCool: rgb(110, 165, 220);
                --colorCoolDarker: rgb(110, 165, 193);
                --baseTextColor: rgb(55, 55, 55);
                --baseEditorialTextColor: rgb(110, 110, 110);
                --baseLinkColor: rgb(110, 165, 220);
                --baseLinkColorHover: rgb(110, 165, 193);
                --baseInlineBorderColor: rgb(193, 193, 193);
                --baseTextLineColor: rgb(55, 55, 55);
                --alertTextLineColor: rgb(255, 0, 0);
                --baseQuoteBackgroundColor: 165, 165, 165 ;
                --baseLineHeight: 1.618;
                --smallLineHeight: 1.2;
                --baseTextSize: 1rem;
                --biggestTextSize: 1.3rem;
                --biggerTextSize: 1.2rem;
                --bigTextSize: 1.1rem;
                --smallTextSize: 0.8rem;
                --smallerTextSize: 0.75rem;
                --smallestTextSize: 0.618rem;
                --baseTitleSize: 1.5em;
                --biggestTitleSize: 2.617924em;
                --bigTitleSize: 1.618em;
                --smallTitleSize: 1.3rem;
                --smallerTitleSize: 1.2rem;
                --smallestTitleSize: 1.1rem;
                --baseFontFamily: Georgia, Times New Roman, serif;
                --titleFontFamily: Helvetica, Arial, sans-serif;
                --codeFontFamily: monospace;
                --lightestFontWeight: 100;
                --baseFontWeight: 400;
                --heaviestFontWeight: 700;
                --shiftedFontVoice: oblique 15deg;
                --baseFontVoice: normal;
                --alternateFontVoice: italic;
                --baseTextQuotes: “ ” ‘ ’;
                --baseQuoteBorder: 10px solid rgb(220, 220, 220);
                --smallQuoteBorder: 5px solid rgb(193, 193, 193);
                --bigSpacingHorizontal: 1.618rem;
                --baseSpacingHorizontal: 0.618rem;
                --bigSpacingVertical: 1.618em;
                --baseSpacingVertical: 0.618em;
                --idleTextLineStyle: dotted;
                --activeTextLineStyle: solid;
                --idleTextDecoration: dotted underline 2px;
                }

                html {
                color: var(--baseTextColor);
                font-family: var(--baseFontFamily);
                font-size: calc(.5vw + 1rem);
                line-height: var(--baseLineHeight);
                }

                /*=====
                #Everything
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6,
                p,
                ul,
                ol,
                dl,
                pre {
                line-height: var(--baseLineHeight);
                margin: 0 var(--baseSpacingHorizontal);
                }

                /*=====
                #Headings
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6 {
                font-family: var(--titleFontFamily);
                font-weight: var(--heaviestFontWeight);
                line-height: var(--smallLineHeight);
                margin-bottom: calc(1.618vmin - 1vmax + .35em);
                }

                h1 {
                font-size: var(--biggestTitleSize);
                }

                h2 {
                font-size: var(--bigTitleSize);
                }

                h3 {
                font-size: var(--baseTitleSize);
                }

                h4 {
                font-size: var(--smallTitleSize);
                }

                h5 {
                font-size: var(--smallerTitleSize);
                }

                h6 {
                font-size: var(--smallestTitleSize);
                }

                /*=====
                #Lists
                =====*/
                ul,
                ol,
                dl,
                menu {
                padding: var(--baseSpacingVertical) var(--baseSpacingHorizontal);
                }

                li {
                text-indent: -0.9em;
                /*this brings the left text aligned with the text of a <dd> element*/
                line-height: var(--baseLineHeight);
                padding: 0;
                margin: 0 0 0 var(--baseSpacingHorizontal);
                }

                li {
                list-style-position: inside;
                }

                nav li,
                menu li {
                text-indent: 0;
                list-style-type: none;
                margin: 0;
                }
                
                dt {
                text-indent: calc(-1 * var(--baseSpacingHorizontal));
                }

                dd {
                margin: 0;
                padding: 0 var(--baseSpacingHorizontal);
                }

                /*=====
                #Paragraphs #Blocks
                =====*/
                hr {
                color: var(--colorNeutral);
                border-width: 0.0625em;
                border-style: solid;
                margin: var(--bigSpacingVertical) var(--baseSpacingHorizontal);
                }

                p,
                blockquote {
                line-height: var(--baseLineHeight);
                }

                p {
                font-size: var(--baseTextSize);
                margin-bottom: var(--baseSpacingVertical);
                }

                blockquote,
                q {
                    quotes: var(--baseTextQuotes);
                }

                blockquote::before,
                q::before {
                    content: open-quote;
                }

                /* Credit where it's due:
                    https://css-tricks.com/snippets/css/simple-and-nice-blockquote-styling/
                */
                blockquote {
                background: rgba(165, 165, 165, 0.15);
                border-left: var(--baseQuoteBorder);
                margin: var(--bigSpacingVertical) var(--baseSpacingHorizontal);
                padding: var(--baseSpacingVertical) var(--baseSpacingHorizontal);
                }

                blockquote::before,
                blockquote::after {
                color: var(--colorNeutralLight);
                font-size: 4em;
                line-height: 0.1em;
                vertical-align: -0.5em;
                }

                blockquote::before {
                margin-right: var(--baseSpacingHorizontal);
                }

                blockquote::after {
                content: no-close-quote;
                }

                q::after {
                content: close-quote;
                }

                /*=====
                #Links
                =====*/
                a {
                color: var(--baseLinkColor);
                text-decoration: none;
                border-bottom: 1px var(--idleTextLineStyle) transparent;
                transition: all 0.3s ease-in-out;
                }

                a:hover,
                a:focus {
                color: var(--baseLinkColorHover);
                border-color: var(--baseLinkColorHover);
                outline: none;
                }

                a:active {
                border-style: solid;
                }
            }
        }
    }

}
@include describe('sections with/out css vars') {
    @include it('if all you ask for is CSS variables, you just get a :root') {
        @include assert {

            @include output {
                @include typographyBaseline((cssVariables));
            }
            @include expect {
                :root {
                --colorNeutralDarker: rgb(55, 55, 55);
                --colorNeutralDark: rgb(110, 110, 110);
                --colorNeutral: rgb(165, 165, 165);
                --colorNeutralLight: rgb(193, 193, 193);
                --colorNeutralLighter: rgb(220, 220, 220);
                --colorCool: rgb(110, 165, 220);
                --colorCoolDarker: rgb(110, 165, 193);
                --baseTextColor: rgb(55, 55, 55);
                --baseEditorialTextColor: rgb(110, 110, 110);
                --baseLinkColor: rgb(110, 165, 220);
                --baseLinkColorHover: rgb(110, 165, 193);
                --baseInlineBorderColor: rgb(193, 193, 193);
                --baseTextLineColor: rgb(55, 55, 55);
                --alertTextLineColor: rgb(255, 0, 0);
                --baseQuoteBackgroundColor: 165, 165, 165;
                --baseLineHeight: 1.618;
                --smallLineHeight: 1.2;
                --baseTextSize: 1rem;
                --biggestTextSize: 1.3rem;
                --biggerTextSize: 1.2rem;
                --bigTextSize: 1.1rem;
                --smallTextSize: 0.8rem;
                --smallerTextSize: 0.75rem;
                --smallestTextSize: 0.618rem;
                --baseTitleSize: 1.5em;
                --biggestTitleSize: 2.617924em;
                --bigTitleSize: 1.618em;
                --smallTitleSize: 1.3rem;
                --smallerTitleSize: 1.2rem;
                --smallestTitleSize: 1.1rem;
                --baseFontFamily: Georgia, Times New Roman, serif;
                --titleFontFamily: Helvetica, Arial, sans-serif;
                --codeFontFamily: monospace;
                --lightestFontWeight: 100;
                --baseFontWeight: 400;
                --heaviestFontWeight: 700;
                --shiftedFontVoice: oblique 15deg;
                --baseFontVoice: normal;
                --alternateFontVoice: italic;
                --baseTextQuotes: “ ” ‘ ’;
                --baseQuoteBorder: 10px solid rgb(220, 220, 220);
                --smallQuoteBorder: 5px solid rgb(193, 193, 193);
                --bigSpacingHorizontal: 1.618rem;
                --baseSpacingHorizontal: 0.618rem;
                --bigSpacingVertical: 1.618em;
                --baseSpacingVertical: 0.618em;
                --idleTextLineStyle: dotted;
                --activeTextLineStyle: solid;
                --idleTextDecoration: dotted underline 2px;
                }
            }
        }
    }
    @include it('you can get CSS variables on just headings') {
        @include assert {

            @include output {
                @include typographyBaseline((cssVariables, headings));
            }
            @include expect {
                :root {
                --colorNeutralDarker: rgb(55, 55, 55);
                --colorNeutralDark: rgb(110, 110, 110);
                --colorNeutral: rgb(165, 165, 165);
                --colorNeutralLight: rgb(193, 193, 193);
                --colorNeutralLighter: rgb(220, 220, 220);
                --colorCool: rgb(110, 165, 220);
                --colorCoolDarker: rgb(110, 165, 193);
                --baseTextColor: rgb(55, 55, 55);
                --baseEditorialTextColor: rgb(110, 110, 110);
                --baseLinkColor: rgb(110, 165, 220);
                --baseLinkColorHover: rgb(110, 165, 193);
                --baseInlineBorderColor: rgb(193, 193, 193);
                --baseTextLineColor: rgb(55, 55, 55);
                --alertTextLineColor: rgb(255, 0, 0);
                --baseQuoteBackgroundColor: 165, 165, 165;
                --baseLineHeight: 1.618;
                --smallLineHeight: 1.2;
                --baseTextSize: 1rem;
                --biggestTextSize: 1.3rem;
                --biggerTextSize: 1.2rem;
                --bigTextSize: 1.1rem;
                --smallTextSize: 0.8rem;
                --smallerTextSize: 0.75rem;
                --smallestTextSize: 0.618rem;
                --baseTitleSize: 1.5em;
                --biggestTitleSize: 2.617924em;
                --bigTitleSize: 1.618em;
                --smallTitleSize: 1.3rem;
                --smallerTitleSize: 1.2rem;
                --smallestTitleSize: 1.1rem;
                --baseFontFamily: Georgia, Times New Roman, serif;
                --titleFontFamily: Helvetica, Arial, sans-serif;
                --codeFontFamily: monospace;
                --lightestFontWeight: 100;
                --baseFontWeight: 400;
                --heaviestFontWeight: 700;
                --shiftedFontVoice: oblique 15deg;
                --baseFontVoice: normal;
                --alternateFontVoice: italic;
                --baseTextQuotes: “ ” ‘ ’;
                --baseQuoteBorder: 10px solid rgb(220, 220, 220);
                --smallQuoteBorder: 5px solid rgb(193, 193, 193);
                --bigSpacingHorizontal: 1.618rem;
                --baseSpacingHorizontal: 0.618rem;
                --bigSpacingVertical: 1.618em;
                --baseSpacingVertical: 0.618em;
                --idleTextLineStyle: dotted;
                --activeTextLineStyle: solid;
                --idleTextDecoration: dotted underline 2px;
                }

                /*=====
                #Headings
                =====*/
                h1,
                h2,
                h3,
                h4,
                h5,
                h6 {
                font-family: var(--titleFontFamily);
                font-weight: var(--heaviestFontWeight);
                line-height: var(--smallLineHeight);
                margin-bottom: calc(1.618vmin - 1vmax + .35em);
                }

                h1 {
                font-size: var(--biggestTitleSize);
                }

                h2 {
                font-size: var(--bigTitleSize);
                }

                h3 {
                font-size: var(--baseTitleSize);
                }

                h4 {
                font-size: var(--smallTitleSize);
                }

                h5 {
                font-size: var(--smallerTitleSize);
                }

                h6 {
                font-size: var(--smallestTitleSize);
                }
            }
        }
    }
}

@include describe('extensability') {
    @include it('lets you override heading variables') {
            @include assert {
                $baseTitleSize: 2em;
                $titleFontFamily: 'Comic Sans MS';
                @include output {
                    @include typographyBaseline(headings);
                }

                @include expect {

                    /*=====
                    #Headings
                    =====*/
                    h1,
                    h2,
                    h3,
                    h4,
                    h5,
                    h6 {
                        font-family: 'Comic Sans MS';
                        font-weight: 700;
                        line-height: 1.2;
                        margin-bottom: calc(1.618vmin - 1vmax + .35em);
                    }

                    h1 {
                        font-size: 2.617924em;
                    }

                    h2 {
                        font-size: 1.618em;
                    }

                    h3 {
                        font-size: 2em;
                    }

                    h4 {
                        font-size: 1.3rem;
                    }

                    h5 {
                        font-size: 1.2rem;
                    }

                    h6 {
                        font-size: 1.1rem;
                    }
                }
            }
        }
}